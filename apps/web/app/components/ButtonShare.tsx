import { Popover, PopoverButton, PopoverPanel } from "@headlessui/react";
import { Button, ButtonProps } from "./Button";
import { TextInput } from "./form-fields/TextInput";
import { Fragment } from "react/jsx-runtime";
import { useEffect, useState } from "react";
import { Tooltip } from "./Tooltip";

interface ButtonShareProps extends ButtonProps {}

export function ButtonShare(props: ButtonShareProps) {
  const [currentUrl, setCurrentUrl] = useState("");

  const handleCopyUrl = () => {
    navigator.clipboard.writeText(currentUrl);
  };

  useEffect(() => {
    setCurrentUrl(window.location.href); // Obtém a URL completa
  }, []);

  return (
    <Popover className="relative">
      <PopoverButton as={Fragment}>
        <Button {...props} />
      </PopoverButton>
      <PopoverPanel
        anchor="top start"
        className={`z-20 rounded-2xl p-6 bg-white shadow-custom-2 flex flex-col gap-6 transition duration-100 ease-out [--anchor-gap:1rem]`}
      >
        <div className="flex flex-col gap-2">
          <span className="text-gray-950 font-medium">Compartilhar via</span>
          <nav className="flex items-center justify-between">
            <button className="text-whatsapp group">
              <WhatsappIcon className="rounded-full border border-whatsapp-idle group-hover:border-whatsapp" />
            </button>

            <button className="text-facebook group">
              <FacebookIcon className="rounded-full border border-facebook-idle group-hover:border-facebook" />
            </button>

            <button className="text-instagram group">
              <InstagramIcon className="rounded-full border border-instagram-idle group-hover:border-instagram" />
            </button>

            <button className="text-twitter group">
              <TwitterIcon className="rounded-full border border-twitter-idle group-hover:border-twitter" />
            </button>

            <button className="text-telegram group">
              <TelegramIcon className="rounded-full border border-telegram-idle group-hover:border-telegram" />
            </button>
          </nav>
        </div>
        <div className="flex flex-col gap-2">
          <span className="text-gray-950 font-medium">Ou copie o link</span>
          <div className="flex flex-row gap-2">
            <TextInput placeholder={currentUrl} />
            <Tooltip text="Copiado para área de transferência!">
              <Button skin="ghost" size="md" onClick={handleCopyUrl}>
                Copiar
              </Button>
            </Tooltip>
          </div>
        </div>
      </PopoverPanel>
    </Popover>
  );
}

const WhatsappIcon = (props: React.SVGProps<SVGSVGElement>) => {
  return (
    <svg width="44" height="44" viewBox="0 0 44 44" fill="none" {...props}>
      <rect width="44" height="44" rx="22" fill="white" />
      <g clipPath="url(#clip0_369_42122)">
        <path
          d="M22 11C15.9306 11 11 15.9306 11 22C11 23.9509 11.535 25.7715 12.4273 27.3608L11.0177 32.3928C10.9952 32.4734 10.9942 32.5584 11.0148 32.6394C11.0354 32.7205 11.0769 32.7947 11.1351 32.8547C11.1933 32.9147 11.2662 32.9584 11.3466 32.9814C11.427 33.0045 11.512 33.0061 11.5932 32.986L16.84 31.6857C18.3818 32.5088 20.1312 33 22 33C28.0694 33 33 28.0694 33 22C33 15.9306 28.0694 11 22 11ZM22 11.9565C27.5524 11.9565 32.0435 16.4476 32.0435 22C32.0435 27.5524 27.5524 32.0435 22 32.0435C20.2199 32.0435 18.5528 31.5794 17.1034 30.7684C16.9974 30.7092 16.8729 30.6925 16.755 30.7217L12.1602 31.8604L13.3922 27.4645C13.4099 27.4024 13.4147 27.3373 13.4065 27.2733C13.3984 27.2092 13.3773 27.1475 13.3446 27.0918C12.4638 25.5982 11.9565 23.8605 11.9565 22C11.9565 16.4476 16.4476 11.9565 22 11.9565ZM18.003 16.2609C17.6964 16.2609 17.2585 16.3749 16.8989 16.7625C16.6828 16.9953 15.7826 17.8724 15.7826 19.4144C15.7826 21.0221 16.8976 22.4093 17.0324 22.5876H17.0334V22.5885C17.0206 22.5717 17.2045 22.838 17.45 23.1574C17.6955 23.4767 18.0388 23.8961 18.47 24.3502C19.3326 25.2583 20.5453 26.3079 22.0504 26.9498C22.7436 27.245 23.2904 27.4232 23.7047 27.5532C24.4725 27.7943 25.1719 27.7577 25.6972 27.6803C26.0904 27.6224 26.5229 27.4336 26.9507 27.1628C27.3786 26.892 27.798 26.5553 27.9829 26.0437C28.1154 25.677 28.1828 25.3381 28.2071 25.0592C28.2193 24.9197 28.2208 24.7967 28.2118 24.6827C28.2027 24.5688 28.2124 24.4815 28.1062 24.3072C27.8836 23.9416 27.6314 23.9321 27.3683 23.8019C27.2221 23.7295 26.8059 23.5263 26.3884 23.3274C25.9714 23.1287 25.6104 22.9527 25.388 22.8734C25.2475 22.8228 25.076 22.7501 24.8285 22.7781C24.581 22.8061 24.3365 22.9847 24.1942 23.1957C24.0593 23.3956 23.5163 24.0366 23.3507 24.225C23.3485 24.2237 23.3629 24.2303 23.2975 24.1979C23.0927 24.0966 22.8423 24.0104 22.4717 23.815C22.1012 23.6195 21.6376 23.3308 21.1304 22.8837V22.8827C20.3754 22.2181 19.8465 21.3836 19.6797 21.1033C19.6909 21.0899 19.6784 21.1061 19.7021 21.0827L19.703 21.0818C19.8735 20.9138 20.0247 20.7132 20.1523 20.5662C20.3334 20.3576 20.4133 20.1737 20.4998 20.002C20.6723 19.6596 20.5763 19.2829 20.4765 19.0847V19.0837C20.4834 19.0974 20.4225 18.9631 20.3569 18.8082C20.2911 18.6528 20.2073 18.4513 20.1178 18.2365C19.9387 17.8068 19.7388 17.325 19.6199 17.0427V17.0418C19.4798 16.7093 19.2904 16.4698 19.0426 16.3543C18.7949 16.2387 18.576 16.2716 18.5672 16.2711H18.5662C18.3895 16.263 18.1955 16.2609 18.003 16.2609ZM18.003 17.2174C18.1874 17.2174 18.3691 17.2196 18.5214 17.2267C18.678 17.2345 18.6683 17.2352 18.6382 17.2211C18.6076 17.2069 18.6491 17.2022 18.7381 17.4136C18.8545 17.6899 19.0554 18.1736 19.2351 18.6045C19.3249 18.82 19.4089 19.0223 19.4761 19.1809C19.5432 19.3395 19.5796 19.4281 19.6218 19.5125V19.5134L19.6227 19.5144C19.6641 19.596 19.6604 19.5437 19.6461 19.5723C19.5451 19.7726 19.5314 19.8218 19.4293 19.9394C19.2739 20.1184 19.1153 20.3181 19.0314 20.4008C18.958 20.4729 18.8255 20.5853 18.7428 20.8053C18.6599 21.0256 18.6986 21.3278 18.8315 21.5535C19.0085 21.8539 19.5917 22.8031 20.498 23.6011C21.0687 24.1042 21.6004 24.4372 22.0252 24.6613C22.45 24.8853 22.796 25.0162 22.8734 25.0545C23.0572 25.1455 23.2581 25.2161 23.4918 25.1881C23.7254 25.16 23.9268 25.0183 24.055 24.8733L24.056 24.8724C24.2266 24.6789 24.7337 24.0999 24.977 23.743C24.9873 23.7467 24.9839 23.7438 25.0648 23.7729V23.7739H25.0657C25.1026 23.787 25.5651 23.994 25.9774 24.1905C26.3897 24.3869 26.8082 24.5912 26.9442 24.6585C27.1405 24.7556 27.2332 24.8188 27.2571 24.8191C27.2588 24.8612 27.2604 24.9068 27.2543 24.9761C27.2376 25.1681 27.1862 25.434 27.0834 25.7187C27.033 25.858 26.7707 26.1454 26.4398 26.3548C26.1089 26.5642 25.7062 26.7121 25.5571 26.734C25.1086 26.8001 24.5762 26.8242 23.9915 26.6406C23.5861 26.5134 23.0805 26.3486 22.426 26.0699C21.0984 25.5037 19.9701 24.5403 19.1641 23.6917C18.7611 23.2673 18.4382 22.8724 18.2085 22.5735C17.9792 22.2753 17.8791 22.1201 17.7956 22.0103L17.7947 22.0093C17.6465 21.8134 16.7391 20.5513 16.7391 19.4144C16.7391 18.2112 17.298 17.7394 17.6004 17.4136C17.7591 17.2425 17.9327 17.2174 18.003 17.2174Z"
          fill="currentColor"
        />
      </g>
      <defs>
        <clipPath id="clip0_369_42122">
          <rect
            width="22"
            height="22"
            fill="white"
            transform="translate(11 11)"
          />
        </clipPath>
      </defs>
    </svg>
  );
};

const FacebookIcon = (props: React.SVGProps<SVGSVGElement>) => {
  return (
    <svg width="44" height="44" viewBox="0 0 44 44" fill="none" {...props}>
      <rect width="44" height="44" rx="22" fill="white" />
      <path
        d="M19.6852 33V22.9039H16.3105V19.242H19.6852V16.8054C19.6852 12.7712 21.6099 11 24.8926 11C26.4371 11 27.2669 11.115 27.6685 11.1706L27.6899 11.1736V14.3701H25.4508C24.0568 14.3701 23.57 15.7194 23.57 17.2405V19.242H27.6546L27.1004 22.9039H23.57V33C23.0878 33 22.3499 33 21.7238 33C21.031 33 20.3598 33 19.6852 33Z"
        fill="currentColor"
      />
    </svg>
  );
};

const TwitterIcon = (props: React.SVGProps<SVGSVGElement>) => {
  return (
    <svg width="44" height="44" viewBox="0 0 44 44" fill="none" {...props}>
      <rect width="44" height="44" rx="22" fill="white" />
      <path
        d="M32.8335 15.2808C32.036 15.635 31.1794 15.8733 30.2802 15.9808C31.1985 15.4308 31.9027 14.56 32.2344 13.5217C31.376 14.0308 30.4244 14.4008 29.411 14.6008C28.6002 13.7367 27.4452 13.1967 26.1669 13.1967C23.7119 13.1967 21.7219 15.1875 21.7219 17.6417C21.7219 17.99 21.7619 18.33 21.8369 18.6542C18.1427 18.4692 14.8677 16.6992 12.6743 14.0092C12.2927 14.6658 12.0735 15.4292 12.0735 16.245C12.0735 17.7867 12.8577 19.1475 14.0502 19.9442C13.3218 19.9208 12.636 19.7208 12.0368 19.3883C12.0368 19.4075 12.0368 19.425 12.0368 19.4442C12.0368 21.5983 13.5685 23.395 15.6027 23.8025C15.2302 23.9042 14.8368 23.9583 14.431 23.9583C14.1452 23.9583 13.866 23.93 13.5952 23.8792C14.161 25.645 15.8027 26.9308 17.7477 26.9667C16.2269 28.1591 14.3102 28.87 12.2268 28.87C11.8685 28.87 11.5143 28.8492 11.166 28.8075C13.1335 30.0683 15.4693 30.8042 17.9802 30.8042C26.1569 30.8042 30.6269 24.0308 30.6269 18.1567C30.6269 17.9642 30.6227 17.7725 30.6144 17.5817C31.4835 16.9542 32.2377 16.1717 32.8335 15.2808Z"
        fill="currentColor"
      />
    </svg>
  );
};

const InstagramIcon = (props: React.SVGProps<SVGSVGElement>) => {
  return (
    <svg width="44" height="44" viewBox="0 0 44 44" fill="none" {...props}>
      <rect width="44" height="44" rx="22" fill="white" />
      <g clipPath="url(#clip0_369_42119)">
        <path
          d="M17.6436 11.3521C14.1745 11.3521 11.3516 14.175 11.3516 17.6441V26.3561C11.3516 29.8251 14.1745 32.6481 17.6436 32.6481H26.3556C29.8246 32.6481 32.6476 29.8251 32.6476 26.3561V17.6441C32.6476 14.175 29.8246 11.3521 26.3556 11.3521H17.6436ZM17.6436 12.3201H26.3556C29.3014 12.3201 31.6796 14.6982 31.6796 17.6441V26.3561C31.6796 29.3019 29.3014 31.6801 26.3556 31.6801H17.6436C14.6977 31.6801 12.3196 29.3019 12.3196 26.3561V17.6441C12.3196 14.6982 14.6977 12.3201 17.6436 12.3201ZM27.8076 15.2241C27.5508 15.2241 27.3046 15.326 27.1231 15.5076C26.9415 15.6891 26.8396 15.9353 26.8396 16.1921C26.8396 16.4488 26.9415 16.695 27.1231 16.8765C27.3046 17.0581 27.5508 17.1601 27.8076 17.1601C28.0643 17.1601 28.3105 17.0581 28.492 16.8765C28.6736 16.695 28.7756 16.4488 28.7756 16.1921C28.7756 15.9353 28.6736 15.6891 28.492 15.5076C28.3105 15.326 28.0643 15.2241 27.8076 15.2241ZM21.9996 16.6761C19.0649 16.6761 16.6756 19.0654 16.6756 22.0001C16.6756 24.9347 19.0649 27.3241 21.9996 27.3241C24.9342 27.3241 27.3236 24.9347 27.3236 22.0001C27.3236 19.0654 24.9342 16.6761 21.9996 16.6761ZM21.9996 17.6441C24.411 17.6441 26.3556 19.5886 26.3556 22.0001C26.3556 24.4115 24.411 26.3561 21.9996 26.3561C19.5881 26.3561 17.6436 24.4115 17.6436 22.0001C17.6436 19.5886 19.5881 17.6441 21.9996 17.6441Z"
          fill="currentColor"
        />
      </g>
      <defs>
        <clipPath id="clip0_369_42119">
          <rect
            width="22"
            height="22"
            fill="white"
            transform="translate(11 11)"
          />
        </clipPath>
      </defs>
    </svg>
  );
};

const TelegramIcon = (props: React.SVGProps<SVGSVGElement>) => {
  return (
    <svg width="44" height="44" viewBox="0 0 44 44" fill="none" {...props}>
      <rect width="44" height="44" rx="22" fill="white" />
      <g clipPath="url(#clip0_369_42125)">
        <path
          d="M31.5063 13.2454C31.173 12.9627 30.6495 12.9223 30.1081 13.1396H30.1072C29.5379 13.368 13.9912 20.0365 13.3583 20.3089C13.2432 20.3489 12.2379 20.724 12.3415 21.5596C12.4339 22.3129 13.2419 22.6249 13.3406 22.6609L17.293 24.0143C17.5552 24.8871 18.5219 28.1076 18.7357 28.7956C18.869 29.2245 19.0863 29.788 19.4672 29.904C19.8015 30.0329 20.1339 29.9151 20.349 29.7463L22.7655 27.5049L26.6663 30.5471L26.7592 30.6027C27.0241 30.72 27.2779 30.7787 27.5201 30.7787C27.7072 30.7787 27.8868 30.7436 28.0583 30.6734C28.6428 30.4334 28.8766 29.8765 28.901 29.8134L31.8148 14.668C31.9926 13.8591 31.7455 13.4476 31.5063 13.2454ZM20.7788 24.5556L19.4455 28.1111L18.1121 23.6667L28.3343 16.1111L20.7788 24.5556Z"
          fill="currentColor"
        />
      </g>
      <defs>
        <clipPath id="clip0_369_42125">
          <rect
            width="19.7778"
            height="18"
            fill="white"
            transform="translate(12.1113 13)"
          />
        </clipPath>
      </defs>
    </svg>
  );
};

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Action {
  id        Int      @id @default(autoincrement())
  title     String   @db.VarChar(200)
  slug      String   @unique @db.VarChar(200)
  keywords  String   @db.VarChar(200)
  content   String
  date      DateTime
  image     String   @db.VarChar(200)
  published Boolean  @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Project {
  id             Int          @id @default(autoincrement())
  title          String       @db.VarChar(200)
  slug           String       @unique @db.VarChar(200)
  keywords       String       @db.VarChar(200)
  content        String
  image          String       @db.VarChar(200)
  link           String       @db.VarChar(200)
  startDate      DateTime
  endDate        DateTime
  researchers    Researcher[]
  researchArea   ResearchArea @relation(fields: [researchAreaId], references: [id])
  researchAreaId Int
  published      Boolean      @default(false)
  createdAt      DateTime     @default(now())
  updatedAt      DateTime     @updatedAt
}

model Event {
  id        Int      @id @default(autoincrement())
  title     String   @db.VarChar(200)
  slug      String   @unique @db.VarChar(200)
  keywords  String   @db.VarChar(200)
  content   String
  image     String   @db.VarChar(200)
  link      String   @db.VarChar(200)
  workload  Int
  date      DateTime
  locale    String   @db.VarChar(200)
  published Boolean  @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Publication {
  id             Int          @id @default(autoincrement())
  title          String       @db.VarChar(200)
  slug           String       @unique @db.VarChar(200)
  keywords       String       @db.VarChar(200)
  resume         String
  content        String
  image          String       @db.VarChar(200)
  date           DateTime
  researchers    Researcher[]
  researchArea   ResearchArea @relation(fields: [researchAreaId], references: [id])
  researchAreaId Int
  link           String       @db.VarChar(200)
  magazine       String       @db.VarChar(200)
  doi            String       @db.VarChar(200)
  license        String       @db.VarChar(200)
  published      Boolean      @default(false)
  createdAt      DateTime     @default(now())
  updatedAt      DateTime     @updatedAt
}

model ResearchArea {
  id           Int           @id @default(autoincrement())
  title        String        @db.VarChar(200)
  description  String
  content      String
  image        String        @db.VarChar(200)
  icon         String        @db.VarChar(200)
  projects     Project[]
  publications Publication[]
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
}

model Researcher {
  id           Int           @id @default(autoincrement())
  name         String
  projects     Project[]
  publications Publication[]
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
}

model TeamMember {
  id        Int      @id @default(autoincrement())
  name      String   @db.VarChar(200)
  image     String   @db.VarChar(200)
  role      String   @db.VarChar(200)
  link      String   @db.VarChar(200)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model NewsletterList {
  id        Int      @id @default(autoincrement())
  email     String   @unique @db.VarChar(200)
  createdAt DateTime @default(now())
}

enum Sections {
  HOME_HERO
  RESEARCH_HERO
  TEAM_HERO
  PUBLICATIONS_HERO
  EVENTS_HERO
  ACTIONS_HERO
  PROJECTS_HERO
  HISTORY_HERO
  HISTORY_SECTION
}

model SectionsContent {
  id        Int      @id @default(autoincrement())
  section      Sections 
  title     String   @db.VarChar(200)
  content   String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
